// <auto-generated />
using System;
using MY.FlexiCore.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MY.FlexiCore.Infrastructure.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250927114203_InitDatabase2")]
    partial class InitDatabase2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.BaseDataType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.HasKey("Id");

                    b.ToTable("BaseDataType");

                    b.HasDiscriminator().HasValue("BaseDataType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.DynamicDetailEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("DynamicMasterEntityId")
                        .HasColumnType("bigint");

                    b.Property<bool>("HasLogicalDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasStateMachine")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DynamicMasterEntityId");

                    b.ToTable("DynamicDetailEntity");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.DynamicDetailItemEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("DynamicDetailEntityId")
                        .HasColumnType("bigint");

                    b.Property<bool>("HasLogicalDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasStateMachine")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DynamicDetailEntityId");

                    b.ToTable("DynamicDetailItemEntity");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.DynamicField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("DataTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("DynamicDetailEntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DynamicDetailItemEntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DynamicMasterEntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DynamicMasterEntityId1")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DataTypeId");

                    b.HasIndex("DynamicDetailEntityId");

                    b.HasIndex("DynamicDetailItemEntityId");

                    b.HasIndex("DynamicMasterEntityId");

                    b.HasIndex("DynamicMasterEntityId1");

                    b.ToTable("DynamicField");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.DynamicMasterEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("HasLogicalDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasStateMachine")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DynamicMasterEntity");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.ExecutionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HookName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ExecutionLogs");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.FieldTypes.IntegerFieldType", b =>
                {
                    b.HasBaseType("MY.FlexiCore.Core.Entities.BaseDataType");

                    b.HasDiscriminator().HasValue("IntegerFieldType");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.FieldTypes.StringFieldType", b =>
                {
                    b.HasBaseType("MY.FlexiCore.Core.Entities.BaseDataType");

                    b.HasDiscriminator().HasValue("StringFieldType");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.DynamicDetailEntity", b =>
                {
                    b.HasOne("MY.FlexiCore.Core.Entities.DynamicMasterEntity", null)
                        .WithMany("Details")
                        .HasForeignKey("DynamicMasterEntityId");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.DynamicDetailItemEntity", b =>
                {
                    b.HasOne("MY.FlexiCore.Core.Entities.DynamicDetailEntity", null)
                        .WithMany("Items")
                        .HasForeignKey("DynamicDetailEntityId");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.DynamicField", b =>
                {
                    b.HasOne("MY.FlexiCore.Core.Entities.BaseDataType", "DataType")
                        .WithMany()
                        .HasForeignKey("DataTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MY.FlexiCore.Core.Entities.DynamicDetailEntity", null)
                        .WithMany("Fields")
                        .HasForeignKey("DynamicDetailEntityId");

                    b.HasOne("MY.FlexiCore.Core.Entities.DynamicDetailItemEntity", null)
                        .WithMany("Fields")
                        .HasForeignKey("DynamicDetailItemEntityId");

                    b.HasOne("MY.FlexiCore.Core.Entities.DynamicMasterEntity", null)
                        .WithMany("FooterFields")
                        .HasForeignKey("DynamicMasterEntityId");

                    b.HasOne("MY.FlexiCore.Core.Entities.DynamicMasterEntity", null)
                        .WithMany("HeaderFields")
                        .HasForeignKey("DynamicMasterEntityId1");

                    b.Navigation("DataType");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.DynamicDetailEntity", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.DynamicDetailItemEntity", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("MY.FlexiCore.Core.Entities.DynamicMasterEntity", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("FooterFields");

                    b.Navigation("HeaderFields");
                });
#pragma warning restore 612, 618
        }
    }
}
